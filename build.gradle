plugins {
	id 'org.springframework.boot' version '2.1.4.RELEASE'
	id 'java'
	id "org.asciidoctor.convert" version "1.5.9.2"
}

apply plugin: 'eclipse'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext {
	snippetsDir = file('build/generated-snippets')
}

repositories {
	mavenCentral()
}

configurations {
    all*.exclude module : 'spring-boot-starter-logging'
}

dependencies {
	implementation 'org.hsqldb:hsqldb'
	implementation 'com.h2database:h2'
	
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.lazyluke', name: 'log4jdbc-remix', version: '0.2.7'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.10.3'
	
	runtime('mysql:mysql-connector-java')
	
	compileOnly 'org.projectlombok:lombok:1.18.6'
	annotationProcessor 'org.projectlombok:lombok:1.18.6'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:1.2.6.RELEASE'
	
	
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	compile('org.apache.tomcat.embed:tomcat-embed-jasper')
	compile('javax.servlet:jstl:1.2')

	
	
}

/*bootJar {
	println "bootJar start"
	println "${asciidoctor.outputDir}"

    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
    println "bootJar end"
}
*/

asciidoctor {
    println "asciidoctor start"
    inputs.dir snippetsDir
    dependsOn test
}

task copyDocument(type: Copy) { 
    dependsOn asciidoctor

    from file("build/asciidoc/html5/")
    into file("src/main/resources/static/docs")
}

bootJar {
	println "bootJar start"
    dependsOn copyDocument
}

/* task {
	bootWar {
	 archiveBaseName='-'
	 archiveFileNmae='-.war'
	 archiveVersion='0.0.0'
	}
} */

//build {
//	dependsOn copyDoc
//}

